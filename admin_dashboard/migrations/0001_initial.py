# Generated by Django 4.2 on 2025-09-20 14:20

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Kategori',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nama_kategori', models.CharField(max_length=255, verbose_name='Nama Kategori')),
            ],
            options={
                'verbose_name_plural': 'Kategori',
                'db_table': 'kategori',
            },
        ),
        migrations.CreateModel(
            name='Pelanggan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nama_pelanggan', models.CharField(max_length=255, verbose_name='Nama Pelanggan')),
                ('alamat', models.TextField(verbose_name='Alamat')),
                ('tanggal_lahir', models.DateField(verbose_name='Tanggal Lahir')),
                ('no_hp', models.CharField(max_length=20, verbose_name='Nomor HP')),
                ('username', models.CharField(max_length=150, unique=True, verbose_name='Username')),
                ('password', models.CharField(max_length=128, verbose_name='Password')),
            ],
            options={
                'verbose_name_plural': 'Pelanggan',
                'db_table': 'pelanggan',
            },
        ),
        migrations.CreateModel(
            name='Produk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nama_produk', models.CharField(max_length=255, verbose_name='Nama Produk')),
                ('deskripsi_produk', models.TextField(verbose_name='Deskripsi Produk')),
                ('foto_produk', models.ImageField(upload_to='produk_images/', verbose_name='Foto Produk')),
                ('stok_produk', models.IntegerField(verbose_name='Stok Produk')),
                ('harga_produk', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Harga Produk')),
                ('kategori', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_dashboard.kategori', verbose_name='Kategori')),
            ],
            options={
                'verbose_name_plural': 'Produk',
                'db_table': 'produk',
            },
        ),
        migrations.CreateModel(
            name='Transaksi',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tanggal', models.DateTimeField(auto_now_add=True, verbose_name='Tanggal Transaksi')),
                ('total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Total')),
                ('status_transaksi', models.CharField(choices=[('DIPROSES', 'Diproses'), ('DIBAYAR', 'Dibayar'), ('DIKIRIM', 'Dikirim'), ('DIBATALKAN', 'Dibatalkan')], default='DIPROSES', max_length=50, verbose_name='Status Transaksi')),
                ('bukti_bayar', models.FileField(blank=True, null=True, upload_to='bukti_pembayaran/', verbose_name='Bukti Pembayaran')),
                ('alamat_pengiriman', models.TextField(blank=True, null=True, verbose_name='Alamat Pengiriman')),
                ('pelanggan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_dashboard.pelanggan', verbose_name='Pelanggan')),
            ],
            options={
                'verbose_name_plural': 'Transaksi',
                'db_table': 'transaksi',
            },
        ),
        migrations.CreateModel(
            name='Ulasan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teks_ulasan', models.TextField(verbose_name='Teks Ulasan')),
                ('foto_ulasan', models.ImageField(blank=True, null=True, upload_to='ulasan_images/', verbose_name='Foto Ulasan')),
                ('tanggal_ulasan', models.DateTimeField(auto_now_add=True, verbose_name='Tanggal Ulasan')),
                ('produk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_dashboard.produk', verbose_name='Produk')),
                ('transaksi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_dashboard.transaksi', verbose_name='Transaksi')),
            ],
            options={
                'verbose_name_plural': 'Ulasan',
                'db_table': 'ulasan',
            },
        ),
        migrations.CreateModel(
            name='Notifikasi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipe_pesan', models.CharField(max_length=50, verbose_name='Tipe Pesan')),
                ('isi_pesan', models.TextField(verbose_name='Isi Pesan')),
                ('is_read', models.BooleanField(verbose_name='Sudah Dibaca')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Waktu Dibuat')),
                ('pelanggan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_dashboard.pelanggan', verbose_name='Pelanggan')),
            ],
            options={
                'verbose_name_plural': 'Notifikasi',
                'db_table': 'notifikasi',
            },
        ),
        migrations.CreateModel(
            name='DiskonPelanggan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('persen_diskon', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Persen Diskon')),
                ('status', models.CharField(choices=[('aktif', 'Aktif'), ('tidak_aktif', 'Tidak Aktif')], default='aktif', max_length=50, verbose_name='Status')),
                ('pesan', models.TextField(blank=True, null=True, verbose_name='Pesan')),
                ('tanggal_dibuat', models.DateTimeField(auto_now_add=True, verbose_name='Tanggal Dibuat')),
                ('pelanggan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_dashboard.pelanggan', verbose_name='Pelanggan')),
                ('produk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_dashboard.produk', verbose_name='Produk')),
            ],
            options={
                'verbose_name_plural': 'Diskon Pelanggan',
                'db_table': 'diskon_pelanggan',
            },
        ),
        migrations.CreateModel(
            name='DetailTransaksi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jumlah_produk', models.IntegerField(verbose_name='Jumlah Produk')),
                ('sub_total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Sub Total')),
                ('produk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_dashboard.produk', verbose_name='Produk')),
                ('transaksi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_dashboard.transaksi', verbose_name='Transaksi')),
            ],
            options={
                'verbose_name_plural': 'Detail Transaksi',
                'db_table': 'detail_transaksi',
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nama_lengkap', models.CharField(max_length=255, verbose_name='Nama Lengkap')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'Admin',
                'db_table': 'admin',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
